PACKAGE = "drone_controller"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

room_tab = gen.add_group("Room Configuration")

pid_x_tab = gen.add_group("PID Pitch Configuration")
pid_y_tab = gen.add_group("PID Roll Configuration")
pid_z_tab = gen.add_group("PID Altitude Configuration")

control_tab = gen.add_group("Control Configuration")

control_tab.add("fs", int_t, 0, "Controller frequency", 15, 5, 100)
control_tab.add("Tc", double_t, 0, "Time constant to reach the set point", 3.0, 1.0, 6.0)
control_tab.add("angle_mode", bool_t, 0, "Enable Angle-Mode (Acrobatic if disabled)", True)
control_tab.add("exp_acrobatic_model", bool_t, 0, "Enable Experimental Acrobatic Model", False)
control_tab.add("trust_as_trust", bool_t, 0, "SetAttitudeTarget interprets Thrust As Thrust", True)
control_tab.add("static_trust", double_t, 0, "Trust needed to hover", 0.225, 0.0, 1.0)
control_tab.add("world_frame", str_t, 0, "World Frame", "world")
control_tab.add("drone_frame", str_t, 0, "Drone Frame", "drone")


pid_x_tab.add("Kp_x", double_t, 0, "PID Kp", 4.0, 0.0, 10.0)
pid_x_tab.add("Ki_x", double_t, 0, "PID Ki", 1.0, 0.0, 3.0)
pid_x_tab.add("Kd_x", double_t, 0, "PID Kd", 2.0, 0.0, 10.0)
pid_x_tab.add("init_d_x", double_t, 0, "Initialization Value for the integral contribution", 0.0, 0.0, 10.0)
pid_x_tab.add("output_limit_min_x", double_t, 0, "Lower-bound of the PID output", -4.0, -8.0, 0.0)
pid_x_tab.add("output_limit_max_x", double_t, 0, "Upper-bound of the PID output", 4.0, 0.0, 8.0)
pid_x_tab.add("windup_limit_min_x", double_t, 0, "Lower-bound of the PID windup", -4.0, -8.0, 0.0)
pid_x_tab.add("windup_limit_max_x", double_t, 0, "Upper-bound of the PID windup", 4.0, 0.0, 8.0)


pid_y_tab.add("Kp_y", double_t, 0, "PID Kp", 4.0, 0.0, 10.0)
pid_y_tab.add("Ki_y", double_t, 0, "PID Ki", 1.0, 0.0, 3.0)
pid_y_tab.add("Kd_y", double_t, 0, "PID Kd", 2.0, 0.0, 10.0)
pid_y_tab.add("init_d_y", double_t, 0, "Initialization Value for the integral contribution", 0.0, 0.0, 10.0)
pid_y_tab.add("output_limit_min_y", double_t, 0, "Lower-bound of the PID output", -4.0, -8.0, 0.0)
pid_y_tab.add("output_limit_max_y", double_t, 0, "Upper-bound of the PID output", 4.0, 0.0, 8.0)
pid_y_tab.add("windup_limit_min_y", double_t, 0, "Lower-bound of the PID windup", -4.0, -8.0, 0.0)
pid_y_tab.add("windup_limit_max_y", double_t, 0, "Upper-bound of the PID windup", 4.0, 0.0, 8.0)

pid_z_tab.add("Kp_z", double_t, 0, "PID Kp", 4.5, 0.0, 10.0)
pid_z_tab.add("Ki_z", double_t, 0, "PID Ki", 1.2, 0.0, 3.0)
pid_z_tab.add("Kd_z", double_t, 0, "PID Kd", 3.0, 0.0, 10.0)
pid_z_tab.add("init_d_z", double_t, 0, "Initialization Value for the integral contribution", 0.0, 0.0, 10.0)
pid_z_tab.add("output_limit_min_z", double_t, 0, "Lower-bound of the PID output", -9.8, -20.0, 0.0)
pid_z_tab.add("output_limit_max_z", double_t, 0, "Upper-bound of the PID output", 9.8, 0.0, 20)
pid_z_tab.add("windup_limit_min_z", double_t, 0, "Lower-bound of the PID windup", -9.8, -20.0, 0.0)
pid_z_tab.add("windup_limit_max_z", double_t, 0, "Upper-bound of the PID windup", 9.8, 0.0, 20)

room_tab.add("room_max_x", double_t, 0, "Distance to the nearest obstacle in the positive X-Axis (world frame)", 0.0, -15.0, 15.0)
room_tab.add("room_min_x", double_t, 0, "Distance to the nearest obstacle in the negative X-Axis (world frame)", 0.0, -15.0, 15.0)
room_tab.add("room_max_y", double_t, 0, "Distance to the nearest obstacle in the positive Y-Axis (world frame)", 0.0, -15.0, 15.0)
room_tab.add("room_min_y", double_t, 0, "Distance to the nearest obstacle in the negative Y-Axis (world frame)", 0.0, -15.0, 15.0)
room_tab.add("room_max_z", double_t, 0, "Distance to the nearest obstacle in the positive Z-Axis (world frame)", 0.0, -15.0, 15.0)
room_tab.add("room_min_z", double_t, 0, "Distance to the nearest obstacle in the negative Z-Axis (world frame)", 0.0, -15.0, 15.0)



exit(gen.generate(PACKAGE, "drone_controller", "Params"))