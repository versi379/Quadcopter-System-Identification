// Generated by gencpp from file drone_controller/Land.msg
// DO NOT EDIT!


#ifndef DRONE_CONTROLLER_MESSAGE_LAND_H
#define DRONE_CONTROLLER_MESSAGE_LAND_H

#include <ros/service_traits.h>


#include <drone_controller/LandRequest.h>
#include <drone_controller/LandResponse.h>


namespace drone_controller
{

struct Land
{

typedef LandRequest Request;
typedef LandResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct Land
} // namespace drone_controller


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::drone_controller::Land > {
  static const char* value()
  {
    return "cbb2fae3170f584c2b25f43322fecf10";
  }

  static const char* value(const ::drone_controller::Land&) { return value(); }
};

template<>
struct DataType< ::drone_controller::Land > {
  static const char* value()
  {
    return "drone_controller/Land";
  }

  static const char* value(const ::drone_controller::Land&) { return value(); }
};


// service_traits::MD5Sum< ::drone_controller::LandRequest> should match
// service_traits::MD5Sum< ::drone_controller::Land >
template<>
struct MD5Sum< ::drone_controller::LandRequest>
{
  static const char* value()
  {
    return MD5Sum< ::drone_controller::Land >::value();
  }
  static const char* value(const ::drone_controller::LandRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::drone_controller::LandRequest> should match
// service_traits::DataType< ::drone_controller::Land >
template<>
struct DataType< ::drone_controller::LandRequest>
{
  static const char* value()
  {
    return DataType< ::drone_controller::Land >::value();
  }
  static const char* value(const ::drone_controller::LandRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::drone_controller::LandResponse> should match
// service_traits::MD5Sum< ::drone_controller::Land >
template<>
struct MD5Sum< ::drone_controller::LandResponse>
{
  static const char* value()
  {
    return MD5Sum< ::drone_controller::Land >::value();
  }
  static const char* value(const ::drone_controller::LandResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::drone_controller::LandResponse> should match
// service_traits::DataType< ::drone_controller::Land >
template<>
struct DataType< ::drone_controller::LandResponse>
{
  static const char* value()
  {
    return DataType< ::drone_controller::Land >::value();
  }
  static const char* value(const ::drone_controller::LandResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // DRONE_CONTROLLER_MESSAGE_LAND_H
